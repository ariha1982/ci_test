name: Node.js Dev CI/CD

on:
  pull_request:      # pull request -> merge 가 되었을 때 Github Action 실행!
    types: [ closed ]
  workflow_dispatch: # 수동 실행도 가능하도록 함

jobs:
  build:
    # pull 요청이 dev에 merge 되었을 때 아래 steps를 실행
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'

    runs-on: ubuntu-latest  # 우분투 최신 버전으로 실행

    strategy:
      matrix:
        node-version: ['18.x']  # 노드 버전 지정! 여러 개도 가능! ['18.x', '14.x'] 요렇게

    steps:
      # build 할 코드를 가져옴 (코드 checkout - github에서 제공해주는 checkout@v3 사용)
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{secrets.AWS_ACTION_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_ACTION_SECRET_ACCESS_KEY}}
          application_name: Pumble-dev
          environment_name: Pumble-dev-env
          region: ap-northeast-2
          deployment_package: Dockerrun.aws.json
          wait_for_deployment: false  # 바로 Beanstalk으로 넘어갈 수 있도록 함

      # 그냥 다 했다고 출력하기
      - name: Deployed!
        run: echo App deployed to ELB